---
title: 'Metronome in Digital Ocean'
description: 'How to install Metronome in Digital Ocean'
---

# Guide: Metronome in Digital Ocean

This guide will walk you through the steps to install Metronome in Digital Ocean, but the same steps can be used for any other cloud provider that you can ssh into.

{% alert title="Before you start" %}
You need to create a Digital Ocean account first, if you haven't already, you can use [this affiliate link](https://m.do.co/c/831cb6f2230a) to get a $200 in credit for 60 days.
{% /alert %}

{% alert title="Reverse proxy server" %}
Metronome comes with Caddy configured as a reverse proxy with SSL termination to expose Metronome to the internet.

You need a domain name to use with Metronome. You can use your existing domain and add an `A` record like `metronome.yourdomain.com` to point to your Digital Ocean Droplet IP address.
{% /alert %}

### 1. Create a Digital Ocean Droplet

Create an Ubuntu droplet. You can use the cheapest option, but make sure it has at least 2GB of RAM. It will depends on your ingestion rate. 

### 2. Install Docker Compose

SSH into your droplet and install Docker Compose.

You can refer the Step-1 on [this guide](https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-compose-on-ubuntu-22-04#step-1-installing-docker-compose) to install Docker Compose in a Digital Ocean Droplet.

### 3. Assign a Reserved IP to your Droplet

Assign a reserved IP to your droplet. This will ensure that your droplet will always have the same IP address.

{% image src="/images/docs-docker-do-reserve-ip.jpg" .w-full .mt-4 .mx-auto .rounded-lg /%}

### 4. Configure your domain name

Add an `A` record to your domain name to point to your droplet IP address. Such as `metronome.yourdomain.com`.

### 5. Clone the Metronome repository

SSH into your droplet and clone the Metronome repository.

```bash {% title="Terminal" %}
git clone https://github.com/metronome-sh/metronome-oss.git
```

### 6. Run the setup script

### 7. Start Metronome

```bash {% title="Terminal" %}
docker-compose up -d
```
